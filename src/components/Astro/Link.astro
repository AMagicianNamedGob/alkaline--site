---
/**
 * @description Component for rendering accessible links with external link handling.
 * @param {Props} props - Link configuration
 * @example
 * ```astro
 * // Internal link
 * <Link
 *   href="/blog"
 *   text="Blog Posts"
 * />
 *
 * // External link with icon
 * <Link
 *   href="https://example.com"
 *   text="External Site"
 *   external={true}
 * />
 *
 * // External link without icon
 * <Link
 *   href="https://example.com"
 *   text="External Site"
 *   external={true}
 *   hideIcon={true}
 * />
 *
 * // With custom styling
 * <Link
 *   href="/contact"
 *   text="Contact Us"
 *   class="text-blue-500 hover:underline"
 * />
 * ```
 * @note
 * - Automatically handles external link attributes (rel, target)
 * - Includes accessible icon for external links
 * - Screen reader support for external link indication
 * - Supports custom styling via class prop
 * - Configurable rel attribute for security
 */



interface Props {
	/** URL for the link destination */
	href: string;
	/** Text content of the link */
	text: string;
	/** Whether the link points to an external resource */
	external?: boolean;
	/** Whether to hide the external link icon */
	hideIcon?: boolean;
	/** Optional rel attribute value */
	rel?: string;
	/** Optional CSS classes */
	class?: string |  undefined;
}

const {
	href,
	text,
	external = false,
	hideIcon = false,
	class: className,
	rel: propRel,
} = Astro.props;

const rel = external ? `noopener noreferrer ${propRel || ""}`.trim() : propRel;
---

<a
	href={href}
	target={external ? "_blank" : undefined}
	rel={rel}
	class:list={[className]}
>
	{text}
	{
		external && !hideIcon && (
			<>
				<span class="sr-only">(opens in a new tab)</span>
				<svg
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					width="1em"
					height="1em"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					class="inline-block ml-1"
				>
					<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
					<polyline points="15 3 21 3 21 9" />
					<line x1="10" y1="14" x2="21" y2="3" />
				</svg>
			</>
		)
	}
</a>
