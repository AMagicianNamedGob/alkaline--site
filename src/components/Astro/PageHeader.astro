---
import type { ImageMetadata } from "astro";
import PatternBackground from "@components/Astro/utils/PatternBackground.astro";
import Image from "astro/components/Image.astro";

interface Props {
	/** Main heading text */
	heading: string;
	/** Optional subheading or description text */
	description?: string;
	/** Optional image to display */
	image?: ImageMetadata;
	/** Alt text for the image */
	imageAlt?: string;
	/** Controls image animation (default: true) */
	animate?: boolean;
	/** Pattern name for background decoration */
	backgroundPattern?: string;
	/** Opacity value for background pattern (0-1) */
	patternOpacity?: number;
	/** Optional CSS classes */
	class?: string | undefined;
}

const {
	heading,
	description,
	image,
	imageAlt,
	animate = true,
	backgroundPattern,
	patternOpacity,
	class: className,
} = Astro.props;
---

<div
	class:list={[
		"relative flex flex-col items-center justify-between w-full p-4 lg:-mt-20 lg:flex-row lg:p-24",
		className,
	]}
>
	{
		backgroundPattern && (
			<PatternBackground
				pattern={backgroundPattern}
				patternOpacity={patternOpacity}
				animate={animate}
			/>
		)
	}
	<div
		class:list={[
			"flex flex-col items-start justify-center lg:w-1/2 mb-8 lg:mb-0",
			{ "lg:w-full lg:mb-12": !image },
		]}
	>
		<h2
			class:list={[
				"font-display text-5xl font-medium tracking-wide [text-wrap:balance] sm:text-7xl",
				{ "build-in": animate },
			]}
		>
			{heading}
		</h2>
		<p
			class:list={[
				"mt-4 text-2xl leading-relaxed tracking-wide text-theme-primary",
				{ "build-in": animate },
			]}
		>
			{description}
		</p>
	</div>

	{
		image && (
			<div class="my-10 lg:w-5/12 lg:pl-8">
				<div class="relative overflow-hidden rounded-full aspect-square max-w-sm md:max-w-lg">
					<Image
						src={image}
						alt={imageAlt ?? "Image"}
						class:list={[
							"w-full h-full object-cover",
							{ "spin-and-grow": animate },
							{ "rounded-theme": true },
						]}
						width={500}
						height={500}
						loading="eager"
					/>
				</div>
			</div>
		)
	}
</div>

<style>
	h2.build-in {
		animation-delay: 0.2s;
	}

	p.build-in {
		animation-delay: 0.4s;
	}
</style>
